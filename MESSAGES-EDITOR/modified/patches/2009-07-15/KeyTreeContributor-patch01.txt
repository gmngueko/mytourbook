Index: src/org/eclipse/babel/editor/tree/KeyTreeContributor.java
===================================================================
RCS file: /cvsroot/technology/org.eclipse.babel/plugins/org.eclipse.babel.editor/src/org/eclipse/babel/editor/tree/KeyTreeContributor.java,v
retrieving revision 1.3
diff -u -r1.3 KeyTreeContributor.java
--- src/org/eclipse/babel/editor/tree/KeyTreeContributor.java	8 Mar 2008 19:57:50 -0000	1.3
+++ src/org/eclipse/babel/editor/tree/KeyTreeContributor.java	15 Jul 2009 08:50:48 -0000
@@ -39,6 +39,7 @@
 import org.eclipse.swt.events.MouseEvent;
 import org.eclipse.swt.events.SelectionAdapter;
 import org.eclipse.swt.events.SelectionEvent;
+import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Menu;
 import org.eclipse.swt.widgets.Tree;
 
@@ -53,6 +54,7 @@
 
     private MessagesEditor editor;
     private IKeyTreeModel treeModel;
+	private int[]	fRefreshCounter	= new int[1];
     
     /**
      * 
@@ -151,11 +153,36 @@
      * @param treeViewer tree viewer
      */
     private void contributeMarkers(final TreeViewer treeViewer) {
-        editor.getMarkers().addObserver(new Observer() {
-            public void update(Observable o, Object arg) {
-                treeViewer.refresh();
-            }
-        });
+
+		editor.getMarkers().addObserver(new Observer() {
+			public void update(final Observable o, final Object arg) {
+
+				fRefreshCounter[0]++;
+
+				final Runnable refreshThread = new Runnable() {
+
+					final int	fRunnableRefreshCounter	= fRefreshCounter[0];
+
+					public void run() {
+
+						if (fRunnableRefreshCounter != fRefreshCounter[0]) {
+							// a new refresh event occured
+							return;
+						}
+
+						if (treeViewer.getTree().isDisposed()) {
+							// widget is disposed
+							return;
+						}
+
+						treeViewer.refresh();
+					}
+				};
+
+				Display.getDefault().asyncExec(refreshThread);
+			}
+		});
+
 //      editor.addChangeListener(new MessagesEditorChangeAdapter() {
 //      public void editorDisposed() {
 //          editor.getMarkers().clear();
